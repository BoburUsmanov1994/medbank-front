{"version":3,"file":"static/js/38.11f90f6b.chunk.js","mappings":"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","sources":["assets/icons/Folders.svg","assets/icons/monitor.svg","containers/form/components/Input.jsx","containers/form/components/Select.jsx","containers/form/components/Datepicker.jsx","containers/form/index.jsx","modules/hospitals/containers/InpatientReportsContainer.jsx","modules/hospitals/pages/InpatientReportsPage.jsx","../node_modules/lodash/fp/placeholder.js","../node_modules/react-feather/dist/icons/refresh-ccw.js"],"sourcesContent":["var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFolders(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25 14V25.1125C25 25.3479 24.9065 25.5736 24.7401 25.7401C24.5736 25.9065 24.3479 26 24.1125 26H5C4.73478 26 4.48043 25.8946 4.29289 25.7071C4.10536 25.5196 4 25.2652 4 25V11C4 10.7348 4.10536 10.4804 4.29289 10.2929C4.48043 10.1054 4.73478 10 5 10H10.6625C10.8787 10.0009 11.089 10.071 11.2625 10.2L14.7375 12.8C14.911 12.929 15.1213 12.9991 15.3375 13H24C24.2652 13 24.5196 13.1054 24.7071 13.2929C24.8946 13.4804 25 13.7348 25 14Z\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25 14V25.1125C25 25.3479 24.9065 25.5736 24.7401 25.7401C24.5736 25.9065 24.3479 26 24.1125 26H5C4.73478 26 4.48043 25.8946 4.29289 25.7071C4.10536 25.5196 4 25.2652 4 25V11C4 10.7348 4.10536 10.4804 4.29289 10.2929C4.48043 10.1054 4.73478 10 5 10H10.6625C10.8787 10.0009 11.089 10.071 11.2625 10.2L14.7375 12.8C14.911 12.929 15.1213 12.9991 15.3375 13H24C24.2652 13 24.5196 13.1054 24.7071 13.2929C24.8946 13.4804 25 13.7348 25 14Z\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 10V7C8 6.73478 8.10536 6.48043 8.29289 6.29289C8.48043 6.10536 8.73478 6 9 6H14.6625C14.8787 6.00089 15.089 6.07098 15.2625 6.2L18.7375 8.8C18.911 8.92902 19.1213 8.99911 19.3375 9H28C28.2652 9 28.5196 9.10536 28.7071 9.29289C28.8946 9.48043 29 9.73478 29 10V21.1125C29 21.3479 28.9065 21.5736 28.7401 21.7401C28.5736 21.9065 28.3479 22 28.1125 22H25\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFolders);\nexport default __webpack_public_path__ + \"static/media/Folders.b3dc12e3fe1a81a0608401f324b3eba9.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMonitor(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27 6H5C4.44772 6 4 6.44772 4 7V22C4 22.5523 4.44772 23 5 23H27C27.5523 23 28 22.5523 28 22V7C28 6.44772 27.5523 6 27 6Z\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 23L24 28\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 23L8 28\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 15V18\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 13V18\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 11V18\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 6V3\",\n    stroke: \"#006D85\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMonitor);\nexport default __webpack_public_path__ + \"static/media/monitor.28acd7f992eb6b5a99461be522562ae9.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {get, hasIn} from \"lodash\";\r\n\r\nconst Input = ({register, name, errors, property, params, label = '', ...rest}) => {\r\n    return (\r\n        <>\r\n            <div className=\"form-group\">\r\n                <label className={'form-label'} htmlFor=\"#\">{label}</label>\r\n                <input  {...register(name, {...params})} {...rest}\r\n                        className={clsx('form-input', {'border-red-600': hasIn(errors, name)})}\r\n                        type={get(property, 'type', \"text\")}  disabled={get(property, 'disabled', false)} step={get(property, \"step\", \"any\")}/>\r\n                {errors[name]?.type == 'required' &&\r\n                    <span className={'text-red-600 text-xs'}>This field is required</span>}\r\n                {errors[name]?.type == 'validation' &&\r\n                    <span className={'text-red-600 text-xs'}>{get(errors, `${name}.message`)}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport RSelect, {components} from 'react-select';\r\nimport clsx from \"clsx\";\r\nimport arrowIcon from \"../../../assets/icons/select-arrow.svg\";\r\nimport {Controller} from \"react-hook-form\";\r\nimport {get, hasIn} from \"lodash\";\r\nimport placeholder from \"lodash/fp/placeholder\";\r\n\r\nconst DropdownIndicator = props => {\r\n    return (\r\n        components.DropdownIndicator && (\r\n            <components.DropdownIndicator {...props}>\r\n                <img src={arrowIcon} alt={'arrow'}/>\r\n            </components.DropdownIndicator>\r\n        )\r\n    );\r\n};\r\nconst customStyles = (hasError = false) => ({\r\n    control: (base, state, error) => ({\r\n        ...base,\r\n        background: \"#fff\",\r\n        borderColor: hasError ? \"red\" : \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: '8px',\r\n        outline: \"none\",\r\n        display: \"flex\",\r\n        overflow: 'hidden',\r\n        padding: '4px 12px',\r\n        width: '100%',\r\n        minWidth: '200px',\r\n        minHeight: '48px',\r\n        fontSize: '16px',\r\n        fontWeight: '400',\r\n        \"&:hover\": {\r\n            borderColor: '#006D85',\r\n            outline: \"none\",\r\n        },\r\n        \"&:focus\": {\r\n            borderColor: '#006D85',\r\n            outline: \"none\",\r\n        }\r\n    }),\r\n    indicatorSeparator: (base, state) => ({\r\n        ...base,\r\n        display: 'none'\r\n    })\r\n});\r\nconst Select = ({\r\n                    control, name, errors, placeholder = 'Не выбран', params, label = '', options = []\r\n                }) => {\r\n\r\n    return (\r\n        <div className={clsx(`form-group`)}>\r\n            {label && <label className={clsx('form-label')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                rules={params}\r\n                render={({field}) => <RSelect\r\n                    {...field}\r\n                    clearIndicator={true}\r\n                    styles={customStyles(hasIn(errors, name))}\r\n                    id={label}\r\n                    options={options}\r\n                    components={{DropdownIndicator}}\r\n                    placeholder={placeholder}\r\n                />}\r\n            />\r\n            {errors[name]?.type == 'required' &&\r\n                <span className={'text-red-600 text-xs'}>This field is required</span>}\r\n            {errors[name]?.type == 'validation' &&\r\n                <span className={'text-red-600 text-xs'}>{get(errors, `${name}.message`)}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {Controller} from \"react-hook-form\";\r\nimport {get, hasIn} from \"lodash\";\r\nimport dayjs from \"dayjs\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\nconst CustomDatepicker = ({\r\n                              control,\r\n                              disabled = false,\r\n                              name,\r\n                              errors,\r\n                              params,\r\n                              property,\r\n                              defaultValue = new Date(),\r\n                              label,\r\n                              dateFormat = \"yyyy/MM/dd\",\r\n                          }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className={'form-label'}>{label ?? name}</label>\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                rules={params}\r\n                defaultValue={defaultValue}\r\n                render={({field}) => (<DatePicker\r\n                    dateFormat={dateFormat}\r\n                    selected={dayjs(field.value).toDate()}\r\n                    onChange={(date) => field.onChange(date)}\r\n                    readOnly={disabled}\r\n                    showMonthYearPicker={get(property, 'showMonthYearPicker')}\r\n                    className={clsx('form-input pr-10', {'border-red-600': hasIn(errors, name)})}\r\n                />)\r\n                }\r\n            />\r\n            {errors[name]?.type == 'required' &&\r\n                <span className={'text-red-600 text-xs'}>This field is required</span>}\r\n            {errors[name]?.type == 'validation' &&\r\n                <span className={'text-red-600 text-xs'}>{get(errors, `${name}.message`)}</span>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomDatepicker;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst Form = ({defaultValues, children, onSubmit}) => {\r\n    const methods = useForm({defaultValues});\r\n    const {handleSubmit, formState: {errors}, setError, clearErrors, reset} = methods;\r\n    const onSubmitRequest = (data) => {\r\n        onSubmit({data, setError, clearErrors, reset})\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmitRequest)}>\r\n            {React.Children.map(children, child => {\r\n                return child.props.name\r\n                    ? React.createElement(child.type, {\r\n                        ...{\r\n                            ...child.props,\r\n                            control: methods.control,\r\n                            setValue: methods.setValue,\r\n                            register: methods.register,\r\n                            key: child.props.name,\r\n                            errors: errors\r\n                        }\r\n                    })\r\n                    : child;\r\n            })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {get, head, last, split} from \"lodash\"\r\nimport downloadIcon from \"../../../assets/icons/download.svg\"\r\nimport {useNavigate} from 'react-router-dom'\r\nimport {NumericFormat} from \"react-number-format\";\r\nimport cloudIcon from \"../../../assets/icons/Folders.svg\";\r\nimport monitorIcon from \"../../../assets/icons/monitor.svg\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {usePostQuery} from \"../../../hooks/api\";\r\nimport dayjs from \"dayjs\";\r\nimport {RefreshCcw} from \"react-feather\";\r\nimport {ContentLoader} from \"../../../components/loader\";\r\nimport Form from \"../../../containers/form\";\r\nimport {Datepicker} from \"../../../containers/form/components\";\r\nimport Modal from \"../../../components/modal\";\r\n\r\n\r\nconst InpatientReportsContainer = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const navigate = useNavigate()\r\n    const {t} = useTranslation()\r\n    const {\r\n        mutate: refreshReportRequest,\r\n        isLoading: isLoadingRefreshReport\r\n    } = usePostQuery({listKeyId: KEYS.inpatientReports})\r\n\r\n    const columns = [\r\n        {\r\n            title: t('Month'),\r\n            key: 'month',\r\n        },\r\n        {\r\n            title: t('СЛУЧАИ ФГМС'),\r\n            key: 'fgms_count',\r\n            render: ({value}) => <NumericFormat thousandSeparator={\" \"} displayType={'text'} value={value}/>\r\n        },\r\n        {\r\n            title: t('СУММА ДЛЯ ОПЛАТЫ'),\r\n            key: 'fgms_payment',\r\n            render: ({value}) => <NumericFormat thousandSeparator={\" \"} displayType={'text'} value={value}/>\r\n        },\r\n        {\r\n            title: 'ДРУГИЕ СЛУЧАИ',\r\n            key: 'total_count',\r\n            render: ({row}) => <NumericFormat thousandSeparator={\" \"} displayType={'text'} value={get(row,'total_count',0)-get(row,'fgms_count',0)}/>\r\n        },\r\n        {\r\n            title: 'СУММА',\r\n            key: 'total_payment',\r\n            render: ({row}) => <NumericFormat thousandSeparator={\" \"} displayType={'text'} value={get(row,'total_payment',0)-get(row,'fgms_payment',0)}/>\r\n        },\r\n        {\r\n            title: t('ДЕЙСТВИЯ'),\r\n            key: 'organization_level',\r\n            classnames: '!text-center',\r\n            render: ({row}) => <div className={'flex justify-around items-center px-3'}>\r\n                <img className={'mr-1'} src={cloudIcon} alt=\"cloud\"/>\r\n                <img src={monitorIcon} alt=\"cloud\"/>\r\n            </div>\r\n        }\r\n\r\n    ]\r\n\r\n    const refreshReport = ({data: {month = new Date()} = {}}) => {\r\n        refreshReportRequest({\r\n            url: URLS.inpatientReports,\r\n            attributes: {\r\n                month: dayjs(month).format(\"YYYY-MM\")\r\n            }\r\n        }, {\r\n            onSuccess: () => {\r\n                setOpen(false);\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Стационарные отчеты\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-4 text-right\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg mr-3'}>\r\n                        <RefreshCcw className={'mr-2.5'} size={20}/>\r\n                        {t(\"Generate\")}\r\n                    </button>\r\n                    <button\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <img className={'mr-2.5'} src={downloadIcon} alt={'export'}/>\r\n                        {t(\"Export\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        onRowClick={(_row) => navigate(`/hospitals/inpatient-reports/${head(split(get(_row, 'month', \"\"), '/', 2))}/${last(split(get(_row, 'month', \"\"), '/', 2))}`)}\r\n                        listKey={KEYS.inpatientReports} url={URLS.inpatientReports}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n            <Modal onClose={() => {\r\n                setOpen(false);\r\n            }}\r\n                   classNames={'overflow-y-visible relative'}\r\n                   title={''}\r\n                   open={open}>\r\n                {isLoadingRefreshReport && <ContentLoader/>}\r\n                <Form onSubmit={refreshReport}>\r\n                    <Datepicker property={{showMonthYearPicker: true}} dateFormat={'yyyy/MM'} name={'month'}\r\n                                label={t('Month')}\r\n                                params={{required: true}}/>\r\n                    <button type={'submit'}\r\n                            className={'w-full p-3.5 rounded-lg bg-primary block  text-white font-bold text-center h-12 mt-6'}>\r\n                        {t('Generate')}\r\n                    </button>\r\n                </Form>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InpatientReportsContainer;","import React from 'react';\r\nimport InpatientContainer from \"../containers/InpatientReportsContainer\";\r\n\r\nconst InpatientReportsPage = () => {\r\n    return (\r\n        <>\r\n            <InpatientContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default InpatientReportsPage;","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar RefreshCcw = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1 4 1 10 7 10\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"23 20 23 14 17 14\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15\"\n  }));\n});\nRefreshCcw.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nRefreshCcw.displayName = 'RefreshCcw';\nexport default RefreshCcw;"],"names":["_ref","_errors$name","_errors$name2","register","name","errors","property","params","_ref$label","label","rest","_objectWithoutProperties","_excluded","_jsx","_Fragment","children","_jsxs","className","htmlFor","_objectSpread","clsx","hasIn","type","get","disabled","step","concat","DropdownIndicator","props","components","src","arrowIcon","alt","customStyles","hasError","arguments","length","undefined","control","base","state","error","background","borderColor","borderRadius","outline","display","overflow","padding","width","minWidth","minHeight","fontSize","fontWeight","indicatorSeparator","_ref$placeholder","placeholder","_ref$options","options","Controller","rules","render","_ref2","field","RSelect","clearIndicator","styles","id","_ref$disabled","_ref$defaultValue","defaultValue","Date","_ref$dateFormat","dateFormat","DatePicker","selected","dayjs","value","toDate","onChange","date","readOnly","showMonthYearPicker","defaultValues","onSubmit","methods","useForm","handleSubmit","formState","setError","clearErrors","reset","data","React","child","setValue","key","_useState","useState","_useState2","_slicedToArray","open","setOpen","navigate","useNavigate","t","useTranslation","_usePostQuery","usePostQuery","listKeyId","KEYS","refreshReportRequest","mutate","isLoadingRefreshReport","isLoading","columns","title","NumericFormat","thousandSeparator","displayType","_ref3","row","_ref4","classnames","_ref5","cloudIcon","monitorIcon","Title","onClick","RefreshCcw","size","downloadIcon","GridView","onRowClick","_row","head","split","last","listKey","url","URLS","Modal","onClose","classNames","ContentLoader","Form","_ref6","_ref6$data","_ref6$data2$month","month","attributes","format","onSuccess","Datepicker","required","InpatientContainer","module","exports","_extends","Object","assign","target","i","source","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","ref","_ref$color","color","_ref$size","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","propTypes","PropTypes","displayName"],"sourceRoot":""}