{"version":3,"file":"static/js/829.1917f3ab.chunk.js","mappings":"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","sources":["modules/references/containers/PatientGroupsContainer.jsx","modules/references/pages/PatientGroupsPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {PlusCircle} from \"react-feather\";\r\nimport {NumericFormat} from \"react-number-format\";\r\nimport Form from \"../../../containers/form\";\r\nimport {get} from \"lodash\";\r\nimport {Input, Select, Datepicker} from \"../../../containers/form/components\";\r\nimport dayjs from \"dayjs\";\r\nimport {getDefaultValue} from \"../../../utils\";\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\n\r\nconst PatientGroupsContainer = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {t} = useTranslation()\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            key: 'id',\r\n            classnames: '!w-[80px] !min-w-0'\r\n        },\r\n        {\r\n            title: t('Month'),\r\n            key: 'month',\r\n        },\r\n        {\r\n            title: t('Code'),\r\n            key: 'code',\r\n        },\r\n        {\r\n            title: t('Ratio'),\r\n            key: 'ratio',\r\n        },\r\n        {\r\n            title: t('Gender'),\r\n            key: 'gender',\r\n        },\r\n        {\r\n            title: t('From age'),\r\n            key: 'from_age_in_month',\r\n            render: ({value}) => <NumericFormat displayType={'text'} thousandSeparator={' '} value={value}/>\r\n        },\r\n        {\r\n            title: t('To age'),\r\n            key: 'to_age_in_month',\r\n            render: ({value}) => <NumericFormat displayType={'text'} thousandSeparator={' '} value={value}/>\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Группы населения\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-4 text-right\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <PlusCircle size={20} className={'mr-1.5'}/>\r\n                        {t(\"Добавить\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        ModalBody={(onSubmit, defaultValues = {}) => <Form onSubmit={({data, ...rest}) => onSubmit({\r\n                            data: {\r\n                                ...data,\r\n                                gender: get(data, 'gender.value'),\r\n                                month: dayjs(get(data, 'month')).format(\"YYYY-MM\")\r\n                            }, ...rest\r\n                        })}\r\n                                                                           defaultValues={{\r\n                                                                               ...get(defaultValues, 'data.data', {}),\r\n                                                                               month: dayjs(get(get(defaultValues, 'data.data', {}), 'month')),\r\n                                                                               gender: getDefaultValue([{\r\n                                                                                   value: 'male',\r\n                                                                                   label: t('Male')\r\n                                                                               }, {\r\n                                                                                   value: 'female',\r\n                                                                                   label: t('Female')\r\n                                                                               }], get(get(defaultValues, 'data.data', {}), 'gender'))\r\n                                                                           }}>\r\n                            <Input name={'code'} placeholder={t('Code')} label={t('Code')}\r\n                                   params={{required: true}}/>\r\n                            <Input name={'ratio'} property={{type: 'number'}} placeholder={t('Ratio')}\r\n                                   label={t('Ratio')}\r\n                                   params={{required: true}}/>\r\n                            <Select name={'gender'} label={t('Gender')} params={{required: true}}\r\n                                    options={[{value: 'male', label: t('Male')}, {value: 'female', label: t('Female')}]}/>\r\n                            <Input name={'from_age_in_month'} property={{type: 'number', step: 1}}\r\n                                   placeholder={t('From age')}\r\n                                   label={t('From age in month')}\r\n                                   params={{required: true}}/>\r\n                            <Input name={'to_age_in_month'} property={{type: 'number', step: 1}} placeholder={t('To age')}\r\n                                   label={t('To age in month')}\r\n                                   params={{required: true}}/>\r\n                            <Datepicker property={{showMonthYearPicker: true}} dateFormat={'yyyy-MM'} name={'month'}\r\n                                        label={t('Month')}\r\n                                        params={{required: true}}/>\r\n                            <button type={'submit'}\r\n                                    className={'w-full p-3.5 rounded-lg bg-primary block w-full text-white font-bold text-center h-12 mt-6'}>\r\n                                {open ? t('Create') : t('Save')}\r\n                            </button>\r\n                        </Form>}\r\n                        openCreateModal={open}\r\n                        setOpenCreateModal={setOpen}\r\n                        hasActionColumn\r\n                        listKey={KEYS.patientGroups} url={URLS.patientGroups}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientGroupsContainer;","import React from 'react';\r\nimport PatientGroupsContainer from \"../containers/PatientGroupsContainer\";\r\n\r\nconst PatientGroupsPage = () => {\r\n    return (\r\n        <>\r\n            <PatientGroupsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PatientGroupsPage;"],"names":["_useState","useState","_useState2","_slicedToArray","open","setOpen","t","useTranslation","columns","title","key","classnames","render","_ref","value","_jsx","NumericFormat","displayType","thousandSeparator","_ref2","children","_jsxs","className","Title","onClick","PlusCircle","size","GridView","ModalBody","onSubmit","defaultValues","arguments","length","undefined","Form","_ref3","data","rest","_objectWithoutProperties","_excluded","_objectSpread","gender","get","month","dayjs","format","getDefaultValue","label","Input","name","placeholder","params","required","property","type","Select","options","step","Datepicker","showMonthYearPicker","dateFormat","openCreateModal","setOpenCreateModal","hasActionColumn","listKey","KEYS","url","URLS","_Fragment","PatientGroupsContainer"],"sourceRoot":""}