{"version":3,"file":"static/js/265.73109351.chunk.js","mappings":"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","sources":["components/input/index.jsx","modules/settings/containers/TranslationsContainer.jsx","modules/settings/pages/TranslationsPage.jsx"],"sourcesContent":["import React, {useMemo} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {debounce} from \"lodash\"\r\n\r\nconst Input = ({\r\n                   label = '', value = '', setValue = () => {\r\n    }, placeholder = '',classNames='', ...rest\r\n               }) => {\r\n    const handleChange = useMemo((e) => debounce((e) => {\r\n        setValue(e.target.value)\r\n    }, 1000), [])\r\n    return (\r\n        <>\r\n            <div className={clsx(\"form-group mb-0\",classNames)}>\r\n                <label className={'form-label'} htmlFor=\"#\">{label}</label>\r\n                <input placeholder={placeholder} defaultValue={value} onChange={handleChange}  {...rest}\r\n                       className={clsx('form-input')}\r\n                       type={\"search\"}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport Form from \"../../../containers/form\";\r\nimport {get} from \"lodash\";\r\nimport InputSearch from \"../../../components/input\";\r\nimport {Input} from \"../../../containers/form/components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useGetAllQuery} from \"../../../hooks/api\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\n\r\n\r\nconst TranslationsContainer = () => {\r\n    const [search, setSearch] = useState('')\r\n    const {data, isLoading} = useGetAllQuery({key: KEYS.locales, url: URLS.locales})\r\n    const {t} = useTranslation()\r\n    const [open, setOpen] = useState(false)\r\n    let columns = get(data, 'data', []).map(_locale => ({title: get(_locale, 'display'), key: get(_locale, 'code')}))\r\n    columns = [{\r\n        title: 'Key',\r\n        key: 'key',\r\n    }, ...columns]\r\n    if (isLoading) {\r\n        return <OverlayLoader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Translations\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        filters={<div className={'grid grid-cols-12 mb-5 gap-x-8'}>\r\n                            <div className=\"col-span-3\">\r\n                                <InputSearch setValue={setSearch} value={search} placeholder={t('Поиск')}/>\r\n                            </div>\r\n                        </div>}\r\n                        ModalBody={(onSubmit, defaultValues = {}) => <Form onSubmit={(data) => onSubmit(data)}\r\n                                                                           defaultValues={{\r\n                                                                               ...get(defaultValues, 'data', {}),\r\n                                                                           }}>\r\n\r\n                            <Input property={{disabled: true}} name={'key'}\r\n                                   placeholder={t('Key')}\r\n                                   label={t('Key')}\r\n                            />\r\n                            {get(data, 'data', []).map(_locale => <Input classNames={'mt-2'} name={get(_locale, 'code')}\r\n                                                                         placeholder={get(_locale, 'display')}\r\n                                                                         label={get(_locale, 'display')}\r\n                            />)\r\n\r\n                            }\r\n\r\n\r\n                            <button type={'submit'}\r\n                                    className={'w-full p-3.5 rounded-lg bg-primary block  text-white font-bold text-center h-12 mt-6'}>\r\n                                {t('Save')}\r\n                            </button>\r\n                        </Form>}\r\n                        openCreateModal={open}\r\n                        setOpenCreateModal={setOpen}\r\n                        hasActionColumn\r\n                        listKey={KEYS.translations}\r\n                        url={URLS.translations}\r\n                        columns={columns}\r\n                        dataKey={'data.data'}\r\n                        rowKey={'key'}\r\n                        params={{search}}\r\n                        viewUrl={URLS.translationsKey}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TranslationsContainer;","import React from 'react';\r\nimport TranslationsContainer from \"../containers/TranslationsContainer\";\r\n\r\nconst TranslationsPage = () => {\r\n    return (\r\n        <>\r\n            <TranslationsContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TranslationsPage;"],"names":["_ref","_ref$label","label","_ref$value","value","_ref$setValue","setValue","_ref$placeholder","placeholder","_ref$classNames","classNames","rest","_objectWithoutProperties","_excluded","handleChange","useMemo","e","debounce","target","_jsx","_Fragment","children","_jsxs","className","clsx","htmlFor","_objectSpread","defaultValue","onChange","type","_useState","useState","_useState2","_slicedToArray","search","setSearch","_useGetAllQuery","useGetAllQuery","key","KEYS","url","URLS","data","isLoading","t","useTranslation","_useState3","_useState4","open","setOpen","columns","get","map","_locale","title","concat","_toConsumableArray","OverlayLoader","Title","GridView","filters","InputSearch","ModalBody","onSubmit","defaultValues","arguments","length","undefined","Form","Input","property","disabled","name","openCreateModal","setOpenCreateModal","hasActionColumn","listKey","dataKey","rowKey","params","viewUrl","TranslationsContainer"],"sourceRoot":""}