{"version":3,"file":"static/js/265.71dcacb4.chunk.js","mappings":"2TAwEA,EA1D8B,WAC1B,IAAAA,GAAyBC,EAAAA,EAAAA,IAAe,CAACC,IAAKC,EAAAA,EAAAA,QAAcC,IAAKC,EAAAA,EAAAA,UAA1DC,EAAIN,EAAJM,KAAKC,EAASP,EAATO,UACLC,GAAKC,EAAAA,EAAAA,MAALD,EACPE,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAChBI,GAAUC,EAAAA,EAAAA,KAAIX,EAAK,OAAO,IAAIY,KAAI,SAAAC,GAAO,MAAG,CAACC,OAAMH,EAAAA,EAAAA,KAAIE,EAAQ,WAAWjB,KAAIe,EAAAA,EAAAA,KAAIE,EAAQ,QAAQ,IAKtG,OAJAH,EAAO,CAAI,CACPI,MAAO,MACPlB,IAAK,QACRmB,QAAAC,EAAAA,EAAAA,GAAIN,IACFT,GACQgB,EAAAA,EAAAA,KAACC,EAAAA,EAAa,KAGrBD,EAAAA,EAAAA,KAAA,OAAAE,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,aAAYF,UACvBF,EAAAA,EAAAA,KAACK,EAAAA,EAAK,CAAAH,SAAEjB,EAAE,qBAEde,EAAAA,EAAAA,KAAA,OAAKI,UAAU,mBAAkBF,UAC7BF,EAAAA,EAAAA,KAACM,EAAAA,EAAQ,CACLC,UAAW,SAACC,GAAQ,IAAEC,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKP,EAAAA,EAAAA,MAACU,EAAAA,EAAI,CAACL,SAAU,SAACzB,GAAI,OAAKyB,EAASzB,EAAK,EAClC0B,eAAaK,EAAAA,EAAAA,GAAA,IACNpB,EAAAA,EAAAA,KAAIe,EAAe,OAAQ,CAAC,IACjCP,SAAA,EAEjDF,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACC,SAAU,CAACC,UAAS,GAAOC,KAAM,MACjCC,YAAalC,EAAE,OACfmC,MAAOnC,EAAE,UAEfS,EAAAA,EAAAA,KAAIX,EAAK,OAAO,IAAIY,KAAI,SAAAC,GAAO,OAAEI,EAAAA,EAAAA,KAACe,EAAAA,GAAK,CAACG,MAAMxB,EAAAA,EAAAA,KAAIE,EAAQ,QAClBuB,aAAazB,EAAAA,EAAAA,KAAIE,EAAQ,WACzBwB,OAAO1B,EAAAA,EAAAA,KAAIE,EAAQ,YAC1D,KAKFI,EAAAA,EAAAA,KAAA,UAAQqB,KAAM,SACNjB,UAAW,6FAA6FF,SAC3GjB,EAAE,YAEJ,EACPqC,gBAAiB/B,EACjBgC,mBAAoB/B,EACpBgC,iBAAe,EACfC,QAAS7C,EAAAA,EAAAA,aACTC,IAAKC,EAAAA,EAAAA,aACLW,QAASA,EACTiC,QAAS,YACTC,OAAQ,MACRC,QAAS9C,EAAAA,EAAAA,wBAMjC,EC3DA,EARyB,WACrB,OACIkB,EAAAA,EAAAA,KAAA6B,EAAAA,SAAA,CAAA3B,UACIF,EAAAA,EAAAA,KAAC8B,EAAqB,KAGlC,C","sources":["modules/settings/containers/TranslationsContainer.jsx","modules/settings/pages/TranslationsPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport Form from \"../../../containers/form\";\r\nimport {get} from \"lodash\";\r\nimport {Input} from \"../../../containers/form/components\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useGetAllQuery} from \"../../../hooks/api\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\n\r\n\r\n\r\nconst TranslationsContainer = () => {\r\n    const {data,isLoading} = useGetAllQuery({key: KEYS.locales, url: URLS.locales})\r\n    const {t} = useTranslation()\r\n    const [open, setOpen] = useState(false)\r\n    let columns = get(data,'data',[]).map(_locale=>({title:get(_locale,'display'),key:get(_locale,'code')}))\r\n    columns = [{\r\n        title: 'Key',\r\n        key: 'key',\r\n    },...columns]\r\n    if(isLoading){\r\n        return <OverlayLoader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Translations\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        ModalBody={(onSubmit, defaultValues = {}) => <Form onSubmit={(data) => onSubmit(data)}\r\n                                                                           defaultValues={{\r\n                                                                               ...get(defaultValues, 'data', {}),\r\n                                                                           }}>\r\n\r\n                            <Input property={{disabled:true}} name={'key'}\r\n                                   placeholder={t('Key')}\r\n                                   label={t('Key')}\r\n                            />\r\n                            {get(data,'data',[]).map(_locale=><Input name={get(_locale,'code')}\r\n                                                                     placeholder={get(_locale,'display')}\r\n                                                                     label={get(_locale,'display')}\r\n                            />)\r\n\r\n                            }\r\n\r\n\r\n                            <button type={'submit'}\r\n                                    className={'w-full p-3.5 rounded-lg bg-primary block w-full text-white font-bold text-center h-12 mt-6'}>\r\n                                {t('Save')}\r\n                            </button>\r\n                        </Form>}\r\n                        openCreateModal={open}\r\n                        setOpenCreateModal={setOpen}\r\n                        hasActionColumn\r\n                        listKey={KEYS.translations}\r\n                        url={URLS.translations}\r\n                        columns={columns}\r\n                        dataKey={'data.data'}\r\n                        rowKey={'key'}\r\n                        viewUrl={URLS.translationsKey}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TranslationsContainer;","import React from 'react';\r\nimport TranslationsContainer from \"../containers/TranslationsContainer\";\r\n\r\nconst TranslationsPage = () => {\r\n    return (\r\n        <>\r\n            <TranslationsContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TranslationsPage;"],"names":["_useGetAllQuery","useGetAllQuery","key","KEYS","url","URLS","data","isLoading","t","useTranslation","_useState","useState","_useState2","_slicedToArray","open","setOpen","columns","get","map","_locale","title","concat","_toConsumableArray","_jsx","OverlayLoader","children","_jsxs","className","Title","GridView","ModalBody","onSubmit","defaultValues","arguments","length","undefined","Form","_objectSpread","Input","property","disabled","name","placeholder","label","type","openCreateModal","setOpenCreateModal","hasActionColumn","listKey","dataKey","rowKey","viewUrl","_Fragment","TranslationsContainer"],"sourceRoot":""}