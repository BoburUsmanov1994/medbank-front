{"version":3,"file":"static/js/768.6be73090.chunk.js","mappings":"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","sources":["modules/report/containers/ReportsContainer.jsx","modules/report/pages/ReportsPage.jsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport Select from \"../../../components/select\";\r\nimport {REPORT_TYPE_STATUS, REPORT_TYPES} from \"../../../constants\";\r\nimport {get, isEqual, keys} from \"lodash\";\r\nimport config from \"../../../config\";\r\nimport useAuth from \"../../../hooks/auth/useAuth\";\r\nimport dayjs from \"dayjs\";\r\nimport Badge from \"../../../components/badge\";\r\n\r\n\r\nconst ReportsContainer = () => {\r\n    const {t} = useTranslation()\r\n    const {token} = useAuth({});\r\n    const [filter, setFilter] = useState({\r\n        reportType: null, reportStatus: null\r\n    });\r\n    const columns = [{\r\n        title: 'ID',\r\n        key: 'id', classnames: '!w-[80px] !min-w-0'\r\n    }, {\r\n        title: t('File name'),\r\n        key: 'file_name',\r\n        render: ({row}) => isEqual(get(row,'status'),REPORT_TYPE_STATUS.success) ? <a className={'text-blue-700'}\r\n                              href={`${config.FILE_URL}api/reports/${get(row, 'id')}?token=${token}`}\r\n                              target={'_self'}>{get(row, 'file_name')}</a> : <span className={'text-red-600'}>{get(row,'file_name')}</span>\r\n    }, {\r\n        title: t('Report type'), key: 'type',\r\n    },\r\n        {\r\n            title: t('Report status'),\r\n            key: 'status',\r\n            render:({value})=><Badge status={value}>{value}</Badge>\r\n        },\r\n        {\r\n            title: t('Created date'),\r\n            key: 'created_at',\r\n            render: ({row}) => dayjs(get(row, 'created_at')).format(\"DD-MM-YYYY HH:mm:ss\")\r\n        }\r\n    ]\r\n\r\n    return (<div>\r\n        <div className=\"grid grid-cols-12 items-center\">\r\n            <div className=\"col-span-12\">\r\n                <Title>{t(\"Reports\")}</Title>\r\n            </div>\r\n            <div className=\"col-span-12 mt-8\">\r\n                <GridView\r\n                    filters={<div className={'grid grid-cols-12 mb-5 gap-x-8'}>\r\n\r\n                        <div className=\"col-span-3\">\r\n                            <Select\r\n                                value={get(filter, 'reportType')}\r\n                                setValue={(val) => setFilter((prev) => ({...prev, reportType: val}))}\r\n                                label={t('Type')}\r\n                                options={keys(REPORT_TYPES).map(_type => ({value: _type, label: t(_type)}))}/>\r\n                        </div>\r\n                        <div className=\"col-span-3\">\r\n                            <Select\r\n                                value={get(filter, 'reportStatus')}\r\n                                setValue={(val) => setFilter((prev) => ({...prev, reportStatus: val}))}\r\n                                label={t('Status')}\r\n                                options={keys(REPORT_TYPE_STATUS).map(_type => ({value: _type, label: t(_type)}))}/>\r\n                        </div>\r\n                    </div>}\r\n                    listKey={KEYS.reports}\r\n                    url={URLS.reports}\r\n                    params={{status: get(filter, 'reportStatus.value'), type: get(filter, 'reportType.value')}}\r\n                    columns={columns}/>\r\n            </div>\r\n        </div>\r\n    </div>);\r\n};\r\n\r\nexport default ReportsContainer;","import React from 'react';\r\nimport ReportsContainer from \"../containers/ReportsContainer\";\r\n\r\nconst ReportsPage = () => {\r\n    return (\r\n        <>\r\n            <ReportsContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ReportsPage;"],"names":["t","useTranslation","token","useAuth","_useState","useState","reportType","reportStatus","_useState2","_slicedToArray","filter","setFilter","columns","title","key","classnames","render","_ref","row","isEqual","get","REPORT_TYPE_STATUS","_jsx","className","href","concat","config","target","children","_ref2","value","Badge","status","_ref3","dayjs","format","_jsxs","Title","GridView","filters","Select","setValue","val","prev","_objectSpread","label","options","keys","REPORT_TYPES","map","_type","listKey","KEYS","url","URLS","params","type","_Fragment","ReportsContainer"],"sourceRoot":""}