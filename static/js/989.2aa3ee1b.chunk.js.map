{"version":3,"file":"static/js/989.2aa3ee1b.chunk.js","mappings":"2RA0EA,EA9DqB,WACjB,IAAAA,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACbI,GAAKC,EAAAA,EAAAA,MAALD,EACDE,EAAU,CACZ,CACIC,MAAO,KACPC,IAAK,KACLC,WAAY,sBAEhB,CACIF,MAAOH,EAAE,QACTI,IAAK,QAET,CACID,MAAOH,EAAE,kBACTI,IAAK,mBAET,CACID,MAAOH,EAAE,SACTI,IAAK,UAGb,OACIE,EAAAA,EAAAA,KAAA,OAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iCAAgCF,SAAA,EAC3CD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYF,UACvBD,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CAAAH,SAAEP,EAAE,+IAEdM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAuBF,UAClCC,EAAAA,EAAAA,MAAA,UACIG,QAAS,kBAAMZ,GAAQ,EAAK,EAC5BU,UAAW,8GAA8GF,SAAA,EACzHD,EAAAA,EAAAA,KAACM,EAAAA,EAAU,CAACC,KAAM,GAAIJ,UAAW,WAChCT,EAAE,0DAGXM,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBF,UAC7BD,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CACLC,UAAW,SAACC,GAAQ,IAAEC,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKV,EAAAA,EAAAA,MAACa,EAAAA,EAAI,CAACL,SAAUA,EACVC,eAAeK,EAAAA,EAAAA,KAAIL,EAAc,YAAY,CAAC,GAAGV,SAAA,EAChGD,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAM,QAASC,KAAM,OAAQC,YAAa1B,EAAE,QAAS2B,MAAO3B,EAAE,QAC9D4B,OAAQ,CAACC,UAAU,MAC1BvB,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAM,QAASC,KAAM,QAASK,SAAU,CAACN,KAAK,UAAWE,YAAa1B,EAAE,SAAU2B,MAAO3B,EAAE,SAC3F4B,OAAQ,CAACC,UAAU,MAC1BvB,EAAAA,EAAAA,KAACiB,EAAAA,GAAK,CAACC,KAAM,QAASC,KAAM,kBAAmBC,YAAa1B,EAAE,kBACvD2B,MAAO3B,EAAE,qBAChBM,EAAAA,EAAAA,KAAA,UAAQkB,KAAM,SACNf,UAAW,6FAA6FF,SACpGP,EAAPF,EAAS,SAAc,YAEzB,EACPiC,gBAAiBjC,EACjBkC,mBAAoBjC,EACpBkC,iBAAe,EACfC,QAASC,EAAAA,EAAAA,KAAWC,IAAKC,EAAAA,EAAAA,KACzBnC,QAASA,UAKjC,EC7DA,EARgB,WACZ,OACII,EAAAA,EAAAA,KAAAgC,EAAAA,SAAA,CAAA/B,UACID,EAAAA,EAAAA,KAACiC,EAAY,KAGzB,C,2DCTA,SAASC,IAA2Q,OAA9PA,EAAWC,OAAOC,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAI1B,UAAUC,OAAQyB,IAAK,CAAE,IAAIC,EAAS3B,UAAU0B,GAAI,IAAK,IAAIxC,KAAOyC,EAAcJ,OAAOK,UAAUC,eAAeC,KAAKH,EAAQzC,KAAQuC,EAAOvC,GAAOyC,EAAOzC,GAAU,CAAE,OAAOuC,CAAQ,EAAUH,EAASS,MAAMC,KAAMhC,UAAY,CAE5T,SAASiC,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAAkEzC,EAAKwC,EAAnED,EAEzF,SAAuCE,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,CAAC,EAAG,IAA2DzC,EAAKwC,EAA5DD,EAAS,CAAC,EAAOU,EAAaZ,OAAOa,KAAKT,GAAqB,IAAKD,EAAI,EAAGA,EAAIS,EAAWlC,OAAQyB,IAAOxC,EAAMiD,EAAWT,GAAQQ,EAASG,QAAQnD,IAAQ,IAAauC,EAAOvC,GAAOyC,EAAOzC,IAAQ,OAAOuC,CAAQ,CAFhNa,CAA8BX,EAAQO,GAAuB,GAAIX,OAAOgB,sBAAuB,CAAE,IAAIC,EAAmBjB,OAAOgB,sBAAsBZ,GAAS,IAAKD,EAAI,EAAGA,EAAIc,EAAiBvC,OAAQyB,IAAOxC,EAAMsD,EAAiBd,GAAQQ,EAASG,QAAQnD,IAAQ,GAAkBqC,OAAOK,UAAUa,qBAAqBX,KAAKH,EAAQzC,KAAgBuC,EAAOvC,GAAOyC,EAAOzC,GAAQ,CAAE,OAAOuC,CAAQ,CAM3e,IAAI/B,GAAagD,EAAAA,EAAAA,aAAW,SAAUC,EAAMC,GAC1C,IAAIC,EAAaF,EAAKG,MAClBA,OAAuB,IAAfD,EAAwB,eAAiBA,EACjDE,EAAYJ,EAAKhD,KACjBA,OAAqB,IAAdoD,EAAuB,GAAKA,EACnCC,EAAOf,EAAyBU,EAAM,CAAC,QAAS,SAEpD,OAAoBM,EAAAA,cAAoB,MAAO3B,EAAS,CACtDsB,IAAKA,EACLM,MAAO,6BACPC,MAAOxD,EACPyD,OAAQzD,EACR0D,QAAS,YACTC,KAAM,OACNC,OAAQT,EACRU,YAAa,IACbC,cAAe,QACfC,eAAgB,SACfV,GAAoBC,EAAAA,cAAoB,SAAU,CACnDU,GAAI,KACJC,GAAI,KACJC,EAAG,OACYZ,EAAAA,cAAoB,OAAQ,CAC3Ca,GAAI,KACJC,GAAI,IACJC,GAAI,KACJC,GAAI,OACWhB,EAAAA,cAAoB,OAAQ,CAC3Ca,GAAI,IACJC,GAAI,KACJC,GAAI,KACJC,GAAI,OAER,IACAvE,EAAWwE,UAAY,CACrBpB,MAAOqB,IAAAA,OACPxE,KAAMwE,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,UAE/CzE,EAAW0E,YAAc,aACzB,K","sources":["modules/references/containers/DrgContainer.jsx","modules/references/pages/DrgPage.jsx","../node_modules/react-feather/dist/icons/plus-circle.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {PlusCircle} from \"react-feather\";\r\nimport Form from \"../../../containers/form\";\r\nimport {Input} from \"../../../containers/form/components\";\r\nimport {get} from \"lodash\"\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\n\r\nconst DrgContainer = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {t} = useTranslation()\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            key: 'id',\r\n            classnames: '!w-[80px] !min-w-0'\r\n        },\r\n        {\r\n            title: t('Code'),\r\n            key: 'code',\r\n        },\r\n        {\r\n            title: t('Diagnosis code'),\r\n            key: 'diagnosis_codes',\r\n        },\r\n        {\r\n            title: t('Ratio'),\r\n            key: 'ratio',\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Клинико-Затратные Группы\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-4 text-right\">\r\n                    <button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <PlusCircle size={20} className={'mr-1.5'}/>\r\n                        {t(\"Добавить\")}\r\n                    </button>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        ModalBody={(onSubmit, defaultValues = {}) => <Form onSubmit={onSubmit}\r\n                                                                           defaultValues={get(defaultValues,'data.data',{})}>\r\n                            <Input type={'input'} name={'code'} placeholder={t('Code')} label={t('Code')}\r\n                                   params={{required: true}}/>\r\n                            <Input type={'input'} name={'ratio'} property={{type:'number'}} placeholder={t('Ratio')} label={t('Ratio')}\r\n                                   params={{required: true}}/>\r\n                            <Input type={'input'} name={'diagnosis_codes'} placeholder={t('Diagnosis code')}\r\n                                   label={t('Diagnosis code')}/>\r\n                            <button type={'submit'}\r\n                                    className={'w-full p-3.5 rounded-lg bg-primary block w-full text-white font-bold text-center h-12 mt-6'}>\r\n                                {open ? t('Create') : t('Save')}\r\n                            </button>\r\n                        </Form>}\r\n                        openCreateModal={open}\r\n                        setOpenCreateModal={setOpen}\r\n                        hasActionColumn\r\n                        listKey={KEYS.drgs} url={URLS.drgs}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DrgContainer;","import React from 'react';\r\nimport DrgContainer from \"../containers/DrgContainer\";\r\n\r\nconst DrgPage = () => {\r\n    return (\r\n        <>\r\n            <DrgContainer/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DrgPage;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PlusCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12\",\n    y2: \"16\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nPlusCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlusCircle.displayName = 'PlusCircle';\nexport default PlusCircle;"],"names":["_useState","useState","_useState2","_slicedToArray","open","setOpen","t","useTranslation","columns","title","key","classnames","_jsx","children","_jsxs","className","Title","onClick","PlusCircle","size","GridView","ModalBody","onSubmit","defaultValues","arguments","length","undefined","Form","get","Input","type","name","placeholder","label","params","required","property","openCreateModal","setOpenCreateModal","hasActionColumn","listKey","KEYS","url","URLS","_Fragment","DrgContainer","_extends","Object","assign","target","i","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","_ref","ref","_ref$color","color","_ref$size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","displayName"],"sourceRoot":""}