{"version":3,"file":"static/js/265.ddc002f3.chunk.js","mappings":"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","sources":["components/input/index.jsx","components/modal/index.jsx","constants/index.js","containers/form/index.jsx","assets/icons/prev.svg","assets/icons/next.svg","components/no-data/index.jsx","containers/grid-view/index.jsx","modules/settings/containers/TranslationsContainer.jsx","modules/settings/pages/TranslationsPage.jsx"],"sourcesContent":["import React, {useMemo} from 'react';\r\nimport clsx from \"clsx\";\r\nimport {debounce} from \"lodash\"\r\n\r\nconst Input = ({\r\n                   label = '', value = '', setValue = () => {\r\n    }, placeholder = '', ...rest\r\n               }) => {\r\n    const handleChange = useMemo((e) => debounce((e) => {\r\n        setValue(e.target.value)\r\n    }, 1000), [])\r\n    return (\r\n        <>\r\n            <div className=\"form-group mb-0\">\r\n                <label className={'form-label'} htmlFor=\"#\">{label}</label>\r\n                <input placeholder={placeholder} defaultValue={value} onChange={handleChange}  {...rest}\r\n                       className={clsx('form-input')}\r\n                       type={\"search\"}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;","import React, {useEffect} from 'react';\r\nimport {X} from \"react-feather\";\r\nimport clsx from \"clsx\";\r\n\r\nconst Modal = ({\r\n                   children,\r\n                   onClose = () => {\r\n                   },\r\n                   open = false,\r\n                   title = '',\r\n                   classNames = ''\r\n               }) => {\r\n    useEffect(() => {\r\n        if (open) {\r\n            document.body.style.overflow = 'hidden';\r\n        } else {\r\n            document.body.style.overflow = 'auto';\r\n        }\r\n    }, [open]);\r\n    return (\r\n        <>\r\n            {\r\n                open && <div className={'h-screen fixed top-0 left-0 w-full z-50'}>\r\n                    <div onClick={onClose} className={'absolute top-0 left-0 h-full w-full z-5 bg-[#d9d9d9ab]'}/>\r\n                    <div\r\n                        className={clsx('bg-white p-6 z-10 absolute top-1/2 left-1/2 w-[500px] -translate-x-1/2 -translate-y-1/2 rounded shadow-card max-h-[85vh] overflow-y-auto', classNames)}>\r\n                        <div>\r\n                            <h2 className={'text-xl font-bold mb-6'}>{title}</h2>\r\n                            <X onClick={onClose} className={'absolute right-3 top-3 cursor-pointer'}/>\r\n                        </div>\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import {range} from \"lodash\";\r\nimport dayjs from \"dayjs\";\r\n\r\nexport const YEARS = range(2000, dayjs().add(1, 'year').format(\"YYYY\")).map(year => ({value: year, label: year}))\r\nexport const MONTHS = [\r\n    {\r\n        value: '01',\r\n        label: 'January'\r\n    },\r\n    {\r\n        value: '02',\r\n        label: 'February'\r\n    },\r\n    {\r\n        value: '03',\r\n        label: 'March'\r\n    },\r\n    {\r\n        value: '04',\r\n        label: 'April'\r\n    },\r\n    {\r\n        value: '05',\r\n        label: 'May'\r\n    },\r\n    {\r\n        value: '06',\r\n        label: 'June'\r\n    },\r\n    {\r\n        value: '07',\r\n        label: 'July'\r\n    },\r\n    {\r\n        value: '08',\r\n        label: 'August'\r\n    },\r\n    {\r\n        value: '09',\r\n        label: 'September'\r\n    },\r\n    {\r\n        value: '10',\r\n        label: 'October'\r\n    },\r\n    {\r\n        value: '11',\r\n        label: 'November'\r\n    },\r\n    {\r\n        value: '12',\r\n        label: 'December'\r\n    }\r\n]\r\nexport const PER_PAGES = [\r\n    {\r\n        value: 15,\r\n        label: '15'\r\n    },\r\n    {\r\n        value: 25,\r\n        label: '25'\r\n    },\r\n    {\r\n        value: 50,\r\n        label: '50'\r\n    }\r\n]\r\nexport const REGIONS = [\r\n    {\r\n        value: 1,\r\n        label: 'Andijon viloyati'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'Buxoro viloyati'\r\n    },\r\n    {\r\n        value: 3,\r\n        label: 'Jizzax viloyati'\r\n    },\r\n    {\r\n        value: 4,\r\n        label: 'Qashqadaryo viloyati'\r\n    },\r\n    {\r\n        value: 5,\r\n        label: 'Navoiy viloyati'\r\n    },\r\n    {\r\n        value: 6,\r\n        label: 'Namangan viloyati'\r\n    },\r\n    {\r\n        value: 7,\r\n        label: 'Samarqand viloyati'\r\n    },\r\n    {\r\n        value: 8,\r\n        label: 'Surxandaryo viloyati'\r\n    },\r\n    {\r\n        value: 9,\r\n        label: 'Sirdaryo viloyati'\r\n    },\r\n    {\r\n        value: 10,\r\n        label: 'Toshkent shahri'\r\n    },\r\n    {\r\n        value: 11,\r\n        label: 'Toshkent viloyati'\r\n    },\r\n    {\r\n        value: 12,\r\n        label: 'Farg\\'ona viloyati'\r\n    },\r\n    {\r\n        value: 13,\r\n        label: 'Xorazm viloyati'\r\n    },\r\n    {\r\n        value: 14,\r\n        label: 'Qoraqalpog\\'iston Respublikasi'\r\n    },\r\n]\r\n\r\nexport const REPORT_TYPES = {\r\n    patient_general_practitioner_report: 'patient_general_practitioner_report',\r\n    statistical_form_066_report: 'statistical_form_066_report'\r\n}\r\nexport const REPORT_TYPE_STATUS = {\r\n    success: 'success',\r\n    failed: 'failed',\r\n    pending: 'pending'\r\n}","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst Form = ({defaultValues, children, onSubmit}) => {\r\n    const methods = useForm({defaultValues});\r\n    const {handleSubmit, formState: {errors}, setError, clearErrors, reset} = methods;\r\n    const onSubmitRequest = (data) => {\r\n        onSubmit({data, setError, clearErrors, reset})\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmitRequest)}>\r\n            {React.Children.map(children, child => {\r\n                return child.props.name\r\n                    ? React.createElement(child.type, {\r\n                        ...{\r\n                            ...child.props,\r\n                            control: methods.control,\r\n                            setValue: methods.setValue,\r\n                            register: methods.register,\r\n                            key: child.props.name,\r\n                            errors: errors\r\n                        }\r\n                    })\r\n                    : child;\r\n            })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPrev(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.53033 0.46967C7.82322 0.762563 7.82322 1.23744 7.53033 1.53033L2.06066 7L7.53033 12.4697C7.82322 12.7626 7.82322 13.2374 7.53033 13.5303C7.23744 13.8232 6.76256 13.8232 6.46967 13.5303L0.46967 7.53033C0.176777 7.23744 0.176777 6.76256 0.46967 6.46967L6.46967 0.46967C6.76256 0.176777 7.23744 0.176777 7.53033 0.46967Z\",\n    fill: \"#222222\",\n    fillOpacity: 0.6\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPrev);\nexport default __webpack_public_path__ + \"static/media/prev.0ba7b31192ae832f345d4a127d088f8d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgNext(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 14,\n    viewBox: \"0 0 8 14\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M0.46967 0.46967C0.176777 0.762563 0.176777 1.23744 0.46967 1.53033L5.93934 7L0.46967 12.4697C0.176777 12.7626 0.176777 13.2374 0.46967 13.5303C0.762563 13.8232 1.23744 13.8232 1.53033 13.5303L7.53033 7.53033C7.82322 7.23744 7.82322 6.76256 7.53033 6.46967L1.53033 0.46967C1.23744 0.176777 0.762563 0.176777 0.46967 0.46967Z\",\n    fill: \"#222222\",\n    fillOpacity: 0.6\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNext);\nexport default __webpack_public_path__ + \"static/media/next.bebff1c891b224785dd8a6b5e39612fd.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport {useTranslation} from \"react-i18next\";\r\n\r\nconst Nodata = () => {\r\n    const {t} = useTranslation()\r\n    return (\r\n        <div className={'p-5 pt-7 text-center font-semibold'}>\r\n            {t(\"No data\")}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nodata;","import React, {useState} from 'react';\r\nimport {useDeleteQuery, useGetAllQuery, useGetOneQuery, usePostQuery} from \"../../hooks/api\";\r\nimport {ContentLoader, OverlayLoader} from \"../../components/loader\";\r\nimport clsx from \"clsx\";\r\nimport {get, ceil, forEach, head, omit} from \"lodash\"\r\nimport {Navigate} from 'react-router-dom'\r\nimport Select from \"../../components/select\";\r\nimport {PER_PAGES} from \"../../constants\";\r\nimport ReactPaginate from 'react-paginate';\r\nimport prevImg from \"../../assets/icons/prev.svg\"\r\nimport nextImg from \"../../assets/icons/next.svg\"\r\nimport Nodata from \"../../components/no-data\";\r\nimport Modal from \"../../components/modal\";\r\nimport {Edit2, Trash2} from \"react-feather\";\r\nimport usePutQuery from \"../../hooks/api/usePutQuery\";\r\nimport Swal from \"sweetalert2\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport DoubleScrollbar from \"react-double-scrollbar\"\r\n\r\nconst GridView = ({\r\n                      url = '/',\r\n                      viewUrl = null,\r\n                      listKey = '',\r\n                      params = {},\r\n                      filters = null,\r\n                      columns = [],\r\n                      onRowClick = () => {\r\n                      },\r\n                      doubleRow = false,\r\n                      modalClassNames = '',\r\n                      hasActionColumn = false,\r\n                      ModalBody = null,\r\n                      openCreateModal = false,\r\n                      setOpenCreateModal = () => {\r\n                      },\r\n                      dataKey = 'data.data',\r\n                      rowKey = 'id',\r\n                      doubleScrollbar = false\r\n                  }) => {\r\n        const [page, setPage] = useState(1);\r\n        const [rowId, setRowId] = useState(null);\r\n        const [rowIndex, setRowIndex] = useState(null);\r\n        const [pageSize, setPageSize] = useState({value: 50, label: '50'});\r\n        const {t} = useTranslation()\r\n        const {data, isLoading, isError} = useGetAllQuery({\r\n            key: listKey, url, params: {\r\n                params: {\r\n                    ...params, page, per_page: get(pageSize, 'value')\r\n                }\r\n            }\r\n        })\r\n        const {data: defaultValues = {}, isLoading: isLoadingOne} = useGetOneQuery({\r\n            id: rowId, key: [listKey, rowId], url: viewUrl ?? url, enabled: !!(rowId)\r\n        })\r\n        const {mutate: createRequest, isLoading: isLoadingPost} = usePostQuery({listKeyId: listKey})\r\n        const {mutate: updateRequest, isLoading: isLoadingPut} = usePutQuery({listKeyId: listKey})\r\n        const {mutate: deleteRequest, isLoading: deleteLoading} = useDeleteQuery({listKeyId: listKey})\r\n        const onSubmit = ({data: attrs, setError, reset}) => {\r\n            if (!openCreateModal && rowId) {\r\n                updateRequest({\r\n                    url: `${viewUrl ?? url}/${get(attrs, rowKey)}`,\r\n                    attributes: omit(attrs, rowKey)\r\n                }, {\r\n                    onSuccess: () => {\r\n                        setRowId(null);\r\n                        reset()\r\n                    },\r\n                    onError: (error) => {\r\n                        forEach(get(error, 'response.data.errors', {}), (value, field) => {\r\n                            setError(field, {type: 'validation', message: head(value)})\r\n                        })\r\n                    }\r\n                })\r\n\r\n\r\n            } else {\r\n                createRequest({\r\n                    url: url, attributes: attrs\r\n                }, {\r\n                    onSuccess: () => {\r\n                        setOpenCreateModal(false);\r\n                        reset()\r\n                    }, onError: (error) => {\r\n                        forEach(get(error, 'response.data.errors', {}), (value, field) => {\r\n                            setError(field, {type: 'validation', message: head(value)})\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        }\r\n\r\n        const remove = (id) => {\r\n            Swal.fire({\r\n                position: 'center',\r\n                icon: 'error',\r\n                backdrop: 'rgba(0,0,0,0.9)',\r\n                background: 'none',\r\n                title: t('Are you sure?'),\r\n                showConfirmButton: true,\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#F25886',\r\n                cancelButtonColor: '#006D85',\r\n                confirmButtonText: t('Delete'),\r\n                cancelButtonText: t('Cancel'),\r\n                customClass: {\r\n                    title: 'title-color',\r\n                },\r\n            }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteRequest({url: `${viewUrl ?? url}/${id}`})\r\n                }\r\n            });\r\n        }\r\n        if (isError) {\r\n            return <Navigate to={'/error'}/>\r\n        }\r\n        if (isLoading) {\r\n            return <OverlayLoader/>\r\n        }\r\n        return (<div className={'bg-white py-4 px-7 shadow-box'}>\r\n            <div className={'relative z-20'}>\r\n                {filters}\r\n            </div>\r\n            <div className={'max-h-[75vh] overflow-y-auto '}>\r\n                {\r\n                    doubleScrollbar ? <DoubleScrollbar>\r\n                        <table className=\"table relative   border border-[#E6E6E6] rounded-lg\">\r\n                            <thead className={'thead sticky top-0 z-10 bg-white'}>\r\n                            <tr className={'tr'}>\r\n                                {columns && columns.map((th, k) => <th\r\n                                    className={clsx(`th`, get(th, \"classnames\", \"\"), {'sticky left-0 z-50 bg-white': k === 0})}\r\n                                    key={get(th, 'title')}>\r\n                                    {get(th, 'title')}\r\n                                </th>)}\r\n                                {hasActionColumn && <th className={'th text-center'}>\r\n                                    {t(\"Actions\")}\r\n                                </th>}\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody className=\"tbody\">\r\n                            {get(data, dataKey, []).length > 0 ? get(data, dataKey, []).map((tr, index) => {\r\n                                return (<>\r\n                                    <tr\r\n                                        onClick={() => onRowClick(tr)}\r\n                                        className={\"tr\"}\r\n                                        key={get(tr, get(columns, '[0].key', index))}\r\n                                    >\r\n                                        {columns.map((th, j) => <td key={get(th, 'key', j)}\r\n                                                                    className={clsx(`td`, get(th, \"classnames\", \"\"), {'!px-0': doubleRow}, {'sticky left-0 z-50 bg-white !hover:bg-[#E6F1F3]': j === 0})}>\r\n                                            {get(th, 'render') ? get(th, 'render')({\r\n                                                value: get(tr, get(th, 'key')),\r\n                                                row: tr,\r\n                                                index: index + (page - 1) * pageSize + 1\r\n                                            }) : get(tr, get(th, 'key'))}\r\n                                        </td>)}\r\n                                        {hasActionColumn && <td className={'td flex justify-center !max-w-full'}>\r\n                                            <Edit2 className={'mx-3.5'} color={'#2F68FC'} size={22}\r\n                                                   onClick={() => setRowId(get(tr, rowKey))}/>\r\n                                            <Trash2 onClick={() => remove(get(tr, rowKey))} color={'#F25886'} size={24}/>\r\n                                        </td>}\r\n                                    </tr>\r\n                                </>);\r\n                            }) : <tr>\r\n                                <td colSpan={columns?.length || 12}>\r\n                                    <Nodata/>\r\n                                </td>\r\n                            </tr>}\r\n                            </tbody>\r\n                        </table>\r\n                    </DoubleScrollbar> : <table className=\"table relative   border border-[#E6E6E6] rounded-lg\">\r\n                        <thead className={'thead sticky top-0 z-10 bg-white'}>\r\n                        <tr className={'tr'}>\r\n                            {columns && columns.map((th, k) => <th\r\n                                className={clsx(`th`, get(th, \"classnames\", \"\"), {'sticky left-0 z-50 bg-white': k === 0})}\r\n                                key={get(th, 'title')}>\r\n                                {get(th, 'title')}\r\n                            </th>)}\r\n                            {hasActionColumn && <th className={'th text-center'}>\r\n                                {t(\"Actions\")}\r\n                            </th>}\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody className=\"tbody\">\r\n                        {get(data, dataKey, []).length > 0 ? get(data, dataKey, []).map((tr, index) => {\r\n                            return (<>\r\n                                <tr\r\n                                    onClick={() => {\r\n                                        setRowIndex(index);\r\n                                        onRowClick(tr);\r\n                                    }}\r\n                                    className={clsx(\"tr group\",{'selected':index === rowIndex})}\r\n                                    key={get(tr, get(columns, '[0].key', index))}\r\n                                >\r\n                                    {columns.map((th, j) => <td key={get(th, 'key', j)}\r\n                                                                className={clsx(`td`, get(th, \"classnames\", \"\"), {'!px-0': doubleRow}, {'sticky left-0 z-50 bg-white': j === 0})}>\r\n                                        {get(th, 'render') ? get(th, 'render')({\r\n                                            value: get(tr, get(th, 'key')),\r\n                                            row: tr,\r\n                                            index: index + (page - 1) * pageSize + 1\r\n                                        }) : get(tr, get(th, 'key'))}\r\n                                    </td>)}\r\n                                    {hasActionColumn && <td className={'td flex justify-center !max-w-full'}>\r\n                                        <Edit2 className={'mx-3.5'} color={'#2F68FC'} size={22}\r\n                                               onClick={() => setRowId(get(tr, rowKey))}/>\r\n                                        <Trash2 onClick={() => remove(get(tr, rowKey))} color={'#F25886'} size={24}/>\r\n                                    </td>}\r\n                                </tr>\r\n                            </>);\r\n                        }) : <tr>\r\n                            <td colSpan={columns?.length || 12}>\r\n                                <Nodata/>\r\n                            </td>\r\n                        </tr>}\r\n                        </tbody>\r\n                    </table>\r\n                }\r\n\r\n            </div>\r\n            {get(data, 'data.meta.total') > 0 && <div className=\"flex mt-3 justify-between items-center\">\r\n                <div className=\"flex items-center\">\r\n                    <Select isClearable={false} sm value={pageSize} setValue={setPageSize} options={PER_PAGES}/>\r\n                    <span\r\n                        className={'ml-3 text-secondary-300 text-sm font-semibold'}>{t(\"Show\")} 1-{get(pageSize, 'value', 0)} {t(\"from\")} {get(data, 'data.meta.total', 0)}</span>\r\n                </div>\r\n                <ReactPaginate forcePage={page - 1} onPageChange={({selected}) => setPage(selected + 1)}\r\n                               pageCount={ceil(get(data, 'data.meta.total', 0) / get(pageSize, 'value', 1))}\r\n                               nextLabel={<img src={nextImg} alt=\"next\"/>}\r\n                               previousLabel={<img src={prevImg} alt=\"prev\"/>} className={'pagination'}/>\r\n            </div>}\r\n            <Modal onClose={() => {\r\n                setOpenCreateModal(false);\r\n                setRowId(null)\r\n            }}\r\n                   classNames={modalClassNames}\r\n                   title={openCreateModal ? t('Create') : t('Update')}\r\n                   open={!!(openCreateModal || rowId)}>\r\n                {isLoadingPost && <ContentLoader/>}\r\n                {isLoadingPut && <ContentLoader/>}\r\n                {deleteLoading && <ContentLoader/>}\r\n                {!openCreateModal ? (isLoadingOne ?\r\n                    <ContentLoader/> : ModalBody(onSubmit, defaultValues)) : ModalBody(onSubmit, defaultValues)}\r\n            </Modal>\r\n        </div>);\r\n    }\r\n;\r\n\r\nexport default GridView;","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport Form from \"../../../containers/form\";\r\nimport {get} from \"lodash\";\r\nimport Input from \"../../../components/input\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport {useGetAllQuery} from \"../../../hooks/api\";\r\nimport {OverlayLoader} from \"../../../components/loader\";\r\n\r\n\r\n\r\nconst TranslationsContainer = () => {\r\n    const [search,setSearch] = useState('')\r\n    const {data,isLoading} = useGetAllQuery({key: KEYS.locales, url: URLS.locales})\r\n    const {t} = useTranslation()\r\n    const [open, setOpen] = useState(false)\r\n    let columns = get(data,'data',[]).map(_locale=>({title:get(_locale,'display'),key:get(_locale,'code')}))\r\n    columns = [{\r\n        title: 'Key',\r\n        key: 'key',\r\n    },...columns]\r\n    if(isLoading){\r\n        return <OverlayLoader />\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Translations\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        filters={<div className={'grid grid-cols-12 mb-5 gap-x-8'}>\r\n                            <div className=\"col-span-3\">\r\n                                <Input setValue={setSearch} value={search} placeholder={t('Поиск')}/>\r\n                            </div>\r\n                        </div>}\r\n                        ModalBody={(onSubmit, defaultValues = {}) => <Form onSubmit={(data) => onSubmit(data)}\r\n                                                                           defaultValues={{\r\n                                                                               ...get(defaultValues, 'data', {}),\r\n                                                                           }}>\r\n\r\n                            <Input property={{disabled:true}} name={'key'}\r\n                                   placeholder={t('Key')}\r\n                                   label={t('Key')}\r\n                            />\r\n                            {get(data,'data',[]).map(_locale=><Input name={get(_locale,'code')}\r\n                                                                     placeholder={get(_locale,'display')}\r\n                                                                     label={get(_locale,'display')}\r\n                            />)\r\n\r\n                            }\r\n\r\n\r\n                            <button type={'submit'}\r\n                                    className={'w-full p-3.5 rounded-lg bg-primary block  text-white font-bold text-center h-12 mt-6'}>\r\n                                {t('Save')}\r\n                            </button>\r\n                        </Form>}\r\n                        openCreateModal={open}\r\n                        setOpenCreateModal={setOpen}\r\n                        hasActionColumn\r\n                        listKey={KEYS.translations}\r\n                        url={URLS.translations}\r\n                        columns={columns}\r\n                        dataKey={'data.data'}\r\n                        rowKey={'key'}\r\n                        params={{search}}\r\n                        viewUrl={URLS.translationsKey}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TranslationsContainer;","import React from 'react';\r\nimport TranslationsContainer from \"../containers/TranslationsContainer\";\r\n\r\nconst TranslationsPage = () => {\r\n    return (\r\n        <>\r\n            <TranslationsContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TranslationsPage;"],"names":["_ref","_ref$label","label","_ref$value","value","_ref$setValue","setValue","_ref$placeholder","placeholder","rest","_objectWithoutProperties","_excluded","handleChange","useMemo","e","debounce","target","_jsx","_Fragment","children","_jsxs","className","htmlFor","_objectSpread","defaultValue","onChange","clsx","type","_ref$onClose","onClose","_ref$open","open","_ref$title","title","_ref$classNames","classNames","useEffect","document","body","style","overflow","onClick","X","YEARS","range","dayjs","add","format","map","year","MONTHS","PER_PAGES","REGIONS","REPORT_TYPES","patient_general_practitioner_report","statistical_form_066_report","REPORT_TYPE_STATUS","success","failed","pending","defaultValues","onSubmit","methods","useForm","handleSubmit","errors","formState","setError","clearErrors","reset","data","React","child","props","name","control","register","key","t","useTranslation","_ref$url","url","_ref$viewUrl","viewUrl","_ref$listKey","listKey","_ref$params","params","_ref$filters","filters","_ref$columns","columns","_ref$onRowClick","onRowClick","_ref$doubleRow","doubleRow","_ref$modalClassNames","modalClassNames","_ref$hasActionColumn","hasActionColumn","_ref$ModalBody","ModalBody","_ref$openCreateModal","openCreateModal","_ref$setOpenCreateMod","setOpenCreateModal","_ref$dataKey","dataKey","_ref$rowKey","rowKey","_ref$doubleScrollbar","doubleScrollbar","_useState","useState","_useState2","_slicedToArray","page","setPage","_useState3","_useState4","rowId","setRowId","_useState5","_useState6","rowIndex","setRowIndex","_useState7","_useState8","pageSize","setPageSize","_useGetAllQuery","useGetAllQuery","per_page","get","isLoading","isError","_useGetOneQuery","useGetOneQuery","id","enabled","_useGetOneQuery$data","isLoadingOne","_usePostQuery","usePostQuery","listKeyId","createRequest","mutate","isLoadingPost","_usePutQuery","usePutQuery","updateRequest","isLoadingPut","_useDeleteQuery","useDeleteQuery","deleteRequest","deleteLoading","_ref2","attrs","concat","attributes","omit","onSuccess","onError","error","forEach","field","message","head","remove","Swal","position","icon","backdrop","background","showConfirmButton","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","customClass","then","result","isConfirmed","Navigate","to","OverlayLoader","DoubleScrollbar","th","k","length","tr","index","j","row","Edit2","color","size","Trash2","colSpan","Nodata","Select","isClearable","sm","options","ReactPaginate","forcePage","onPageChange","_ref3","selected","pageCount","ceil","nextLabel","src","nextImg","alt","previousLabel","prevImg","Modal","ContentLoader","search","setSearch","KEYS","URLS","setOpen","_locale","_toConsumableArray","Title","GridView","Input","arguments","undefined","Form","property","disabled","TranslationsContainer"],"sourceRoot":""}