{"version":3,"file":"static/js/323.36184e3d.chunk.js","mappings":"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","sources":["containers/form/components/Input.jsx","containers/form/components/Select.jsx","containers/form/components/Datepicker.jsx","containers/form/index.jsx","modules/references/containers/BaseRatesContainer.jsx","modules/references/pages/BaseRatesPage.jsx","../node_modules/lodash/fp/placeholder.js","../node_modules/react-feather/dist/icons/plus-circle.js"],"sourcesContent":["import React from 'react';\r\nimport clsx from \"clsx\";\r\nimport {get, hasIn} from \"lodash\";\r\n\r\nconst Input = ({register, name, errors, property, params, label = '',classNames='', ...rest}) => {\r\n    return (\r\n        <>\r\n            <div className={clsx(\"form-group\",classNames)}>\r\n                <label className={'form-label'} htmlFor=\"#\">{label}</label>\r\n                <input  {...register(name, {...params})} {...rest}\r\n                        className={clsx('form-input', {'border-red-600': hasIn(errors, name)})}\r\n                        type={get(property, 'type', \"text\")}  disabled={get(property, 'disabled', false)} step={get(property, \"step\", \"any\")}/>\r\n                {errors[name]?.type === 'required' &&\r\n                    <span className={'text-red-600 text-xs'}>This field is required</span>}\r\n                {errors[name]?.type === 'validation' &&\r\n                    <span className={'text-red-600 text-xs'}>{get(errors, `${name}.message`)}</span>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport RSelect, {components} from 'react-select';\r\nimport clsx from \"clsx\";\r\nimport arrowIcon from \"../../../assets/icons/select-arrow.svg\";\r\nimport {Controller} from \"react-hook-form\";\r\nimport {get, hasIn} from \"lodash\";\r\nimport placeholder from \"lodash/fp/placeholder\";\r\n\r\nconst DropdownIndicator = props => {\r\n    return (\r\n        components.DropdownIndicator && (\r\n            <components.DropdownIndicator {...props}>\r\n                <img src={arrowIcon} alt={'arrow'}/>\r\n            </components.DropdownIndicator>\r\n        )\r\n    );\r\n};\r\nconst customStyles = (hasError = false) => ({\r\n    control: (base, state, error) => ({\r\n        ...base,\r\n        background: \"#fff\",\r\n        borderColor: hasError ? \"red\" : \"rgba(0, 0, 0, 0.1)\",\r\n        borderRadius: '8px',\r\n        outline: \"none\",\r\n        display: \"flex\",\r\n        overflow: 'hidden',\r\n        padding: '4px 12px',\r\n        width: '100%',\r\n        minWidth: '200px',\r\n        minHeight: '48px',\r\n        fontSize: '16px',\r\n        fontWeight: '400',\r\n        \"&:hover\": {\r\n            borderColor: '#006D85',\r\n            outline: \"none\",\r\n        },\r\n        \"&:focus\": {\r\n            borderColor: '#006D85',\r\n            outline: \"none\",\r\n        }\r\n    }),\r\n    indicatorSeparator: (base, state) => ({\r\n        ...base,\r\n        display: 'none'\r\n    })\r\n});\r\nconst Select = ({\r\n                    control, name, errors, placeholder = 'Не выбран', params, label = '', options = []\r\n                }) => {\r\n\r\n    return (\r\n        <div className={clsx(`form-group`)}>\r\n            {label && <label className={clsx('form-label')}\r\n                             htmlFor={label}>{label}</label>}\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                rules={params}\r\n                render={({field}) => <RSelect\r\n                    {...field}\r\n                    clearIndicator={true}\r\n                    styles={customStyles(hasIn(errors, name))}\r\n                    id={label}\r\n                    options={options}\r\n                    components={{DropdownIndicator}}\r\n                    placeholder={placeholder}\r\n                />}\r\n            />\r\n            {errors[name]?.type == 'required' &&\r\n                <span className={'text-red-600 text-xs'}>This field is required</span>}\r\n            {errors[name]?.type == 'validation' &&\r\n                <span className={'text-red-600 text-xs'}>{get(errors, `${name}.message`)}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Select;","import React from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {Controller} from \"react-hook-form\";\r\nimport {get, hasIn} from \"lodash\";\r\nimport dayjs from \"dayjs\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\nconst CustomDatepicker = ({\r\n                              control,\r\n                              disabled = false,\r\n                              name,\r\n                              errors,\r\n                              params,\r\n                              property,\r\n                              defaultValue = new Date(),\r\n                              label,\r\n                              dateFormat = \"yyyy/MM/dd\",\r\n                          }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label className={'form-label'}>{label ?? name}</label>\r\n            <Controller\r\n                control={control}\r\n                name={name}\r\n                rules={params}\r\n                defaultValue={defaultValue}\r\n                render={({field}) => (<DatePicker\r\n                    dateFormat={dateFormat}\r\n                    selected={dayjs(field.value).toDate()}\r\n                    onChange={(date) => field.onChange(date)}\r\n                    readOnly={disabled}\r\n                    showMonthYearPicker={get(property, 'showMonthYearPicker')}\r\n                    className={clsx('form-input pr-10', {'border-red-600': hasIn(errors, name)})}\r\n                />)\r\n                }\r\n            />\r\n            {errors[name]?.type == 'required' &&\r\n                <span className={'text-red-600 text-xs'}>This field is required</span>}\r\n            {errors[name]?.type == 'validation' &&\r\n                <span className={'text-red-600 text-xs'}>{get(errors, `${name}.message`)}</span>}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomDatepicker;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst Form = ({classNames='',defaultValues, children, onSubmit}) => {\r\n    const methods = useForm({defaultValues});\r\n    const {handleSubmit, formState: {errors}, setError, clearErrors, reset} = methods;\r\n    const onSubmitRequest = (data) => {\r\n        onSubmit({data, setError, clearErrors, reset})\r\n    }\r\n    return (\r\n        <form className={classNames} onSubmit={handleSubmit(onSubmitRequest)}>\r\n            {React.Children.map(children, child => {\r\n                return child.props.name\r\n                    ? React.createElement(child.type, {\r\n                        ...{\r\n                            ...child.props,\r\n                            control: methods.control,\r\n                            setValue: methods.setValue,\r\n                            register: methods.register,\r\n                            key: child.props.name,\r\n                            errors: errors\r\n                        }\r\n                    })\r\n                    : child;\r\n            })}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, {useState} from 'react';\r\nimport Title from \"../../../components/title\";\r\nimport GridView from \"../../../containers/grid-view\";\r\nimport {KEYS} from \"../../../constants/keys\";\r\nimport {URLS} from \"../../../constants/urls\";\r\nimport {PlusCircle} from \"react-feather\";\r\nimport {NumericFormat} from \"react-number-format\";\r\nimport Form from \"../../../containers/form\";\r\nimport {get, head} from \"lodash\";\r\nimport {Datepicker, Input, Select} from \"../../../containers/form/components\";\r\nimport {useGetAllQuery} from \"../../../hooks/api\";\r\nimport {getDefaultValue} from \"../../../utils\";\r\nimport dayjs from \"dayjs\";\r\nimport {useTranslation} from \"react-i18next\";\r\nimport HasAccess, {hasPermission} from \"../../../services/auth/HasAccess\";\r\nimport config from \"../../../config\";\r\nimport {useStore} from \"../../../store\";\r\n\r\n\r\nconst BaseRatesContainer = () => {\r\n    const [open, setOpen] = useState(false)\r\n    const {t} = useTranslation()\r\n    const {data: levels} = useGetAllQuery({key: KEYS.organizationLevel, url: URLS.organizationLevel})\r\n    const {data: types} = useGetAllQuery({key: KEYS.organizationType, url: URLS.organizationType})\r\n    const user = useStore(state => get(state, \"user\", null))\r\n    const columns = [\r\n        {\r\n            title: 'ID',\r\n            key: 'id',\r\n            classnames: '!w-[80px] !min-w-0'\r\n        },\r\n        {\r\n            title: t('Month'),\r\n            key: 'month',\r\n        },\r\n        {\r\n            title: t('Organization level'),\r\n            key: 'organization_level',\r\n        },\r\n        {\r\n            title: t('Organization type'),\r\n            key: 'organization_type',\r\n        },\r\n        {\r\n            title: t('Amount by count'),\r\n            key: 'amount_by_count',\r\n            render: ({value}) => <NumericFormat displayType={'text'} thousandSeparator={' '} value={value}/>\r\n        },\r\n        {\r\n            title: t('Amount by group'),\r\n            key: 'amount_by_group',\r\n            render: ({value}) => <NumericFormat displayType={'text'} thousandSeparator={' '} value={value}/>\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n            <div className=\"grid grid-cols-12 items-center\">\r\n                <div className=\"col-span-8\">\r\n                    <Title>{t(\"Базовые ставки\")}</Title>\r\n                </div>\r\n                <div className=\"col-span-4 text-right\">\r\n                    <HasAccess can={[config.PERMISSIONS.base_rates_edit]}><button\r\n                        onClick={() => setOpen(true)}\r\n                        className={'inline-flex items-center py-2.5 pl-2.5 pr-5 text-sm font-bold text-primary border border-primary rounded-lg'}>\r\n                        <PlusCircle size={20} className={'mr-1.5'}/>\r\n                        {t(\"Добавить\")}\r\n                    </button>\r\n                    </HasAccess>\r\n                </div>\r\n                <div className=\"col-span-12 mt-8\">\r\n                    <GridView\r\n                        ModalBody={(onSubmit, defaultValues = {}) => <Form onSubmit={({data, ...rest}) => onSubmit({\r\n                            data: {\r\n                                ...data,\r\n                                month: parseInt(dayjs(get(data, 'month')).format(\"MM\")),\r\n                                organization_level_id: get(data, 'organization_level_id.value'),\r\n                                organization_type_id: get(data, 'organization_type_id.value')\r\n                            }, ...rest\r\n                        })}\r\n                                                                           defaultValues={{\r\n                                                                               ...get(defaultValues, 'data.data', {}),\r\n                                                                               organization_level_id:getDefaultValue(get(levels, 'data', []).map(level => ({\r\n                                                                                   value: get(level, 'id'),\r\n                                                                                   label: get(head(get(level, 'translations', [])), 'name')\r\n                                                                               })),parseInt(get(get(defaultValues, 'data.data', {}),'organization_level_id'))),\r\n                                                                               organization_type_id:getDefaultValue(get(types, 'data', []).map(type => ({\r\n                                                                                   value: get(type, 'id'),\r\n                                                                                   label: get(head(get(type, 'translations', [])), 'name')\r\n                                                                               })),parseInt(get(get(defaultValues, 'data.data', {}),'organization_type_id')))\r\n                                                                           }}>\r\n                            <Select name={'organization_level_id'} label={t('Organization level')}\r\n                                    params={{required: true}}\r\n                                    options={get(levels, 'data', []).map(level => ({\r\n                                        value: get(level, 'id'),\r\n                                        label: get(head(get(level, 'translations', [])), 'name')\r\n                                    }))}/>\r\n                            <Select name={'organization_type_id'} label={t('Organization type')} params={{required: true}}\r\n                                    options={get(types, 'data', []).map(type => ({\r\n                                        value: get(type, 'id'),\r\n                                        label: get(head(get(type, 'translations', [])), 'name')\r\n                                    }))}/>\r\n                            <Input name={'amount_by_group'} property={{type: 'number', step: 1}}\r\n                                   placeholder={t('Amount by group')}\r\n                                   label={t('Amount by group')}\r\n                            />\r\n                            <Input name={'amount_by_count'} property={{type: 'number', step: 1}}\r\n                                   placeholder={t('Amount by count')}\r\n                                   label={t('Amount by count')}\r\n                            />\r\n                            <Datepicker property={{showMonthYearPicker: true}} dateFormat={'MM'} name={'month'}\r\n                                        label={t('Month')}\r\n                                        params={{required: true}}/>\r\n                            <button type={'submit'}\r\n                                    className={'w-full p-3.5 rounded-lg bg-primary block w-full text-white font-bold text-center h-12 mt-6'}>\r\n                                {open ? t('Create') : t('Save')}\r\n                            </button>\r\n                        </Form>}\r\n                        openCreateModal={open}\r\n                        setOpenCreateModal={setOpen}\r\n                        hasActionColumn={hasPermission(get(user, 'permissions', []), [config.PERMISSIONS.base_rates_edit])}\r\n                        listKey={KEYS.baseRates} url={URLS.baseRates}\r\n                        columns={columns}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BaseRatesContainer;","import React from 'react';\r\nimport BaseRatesContainer from \"../containers/BaseRatesContainer\";\r\n\r\nconst BaseRatesPage = () => {\r\n    return (\r\n        <>\r\n         <BaseRatesContainer />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BaseRatesPage;","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PlusCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12\",\n    y2: \"16\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nPlusCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlusCircle.displayName = 'PlusCircle';\nexport default PlusCircle;"],"names":["_ref","_errors$name","_errors$name2","register","name","errors","property","params","_ref$label","label","_ref$classNames","classNames","rest","_objectWithoutProperties","_excluded","_jsx","_Fragment","children","_jsxs","className","clsx","htmlFor","_objectSpread","hasIn","type","get","disabled","step","concat","DropdownIndicator","props","components","src","arrowIcon","alt","customStyles","hasError","arguments","length","undefined","control","base","state","error","background","borderColor","borderRadius","outline","display","overflow","padding","width","minWidth","minHeight","fontSize","fontWeight","indicatorSeparator","_ref$placeholder","placeholder","_ref$options","options","Controller","rules","render","_ref2","field","RSelect","clearIndicator","styles","id","_ref$disabled","_ref$defaultValue","defaultValue","Date","_ref$dateFormat","dateFormat","DatePicker","selected","dayjs","value","toDate","onChange","date","readOnly","showMonthYearPicker","defaultValues","onSubmit","methods","useForm","handleSubmit","formState","setError","clearErrors","reset","data","React","child","setValue","key","_useState","useState","_useState2","_slicedToArray","open","setOpen","t","useTranslation","levels","useGetAllQuery","KEYS","url","URLS","types","user","useStore","columns","title","classnames","NumericFormat","displayType","thousandSeparator","Title","HasAccess","can","config","onClick","PlusCircle","size","GridView","ModalBody","Form","_ref3","month","parseInt","format","organization_level_id","organization_type_id","getDefaultValue","map","level","head","Select","required","Input","Datepicker","openCreateModal","setOpenCreateModal","hasActionColumn","hasPermission","listKey","BaseRatesContainer","module","exports","_extends","Object","assign","target","i","source","prototype","hasOwnProperty","call","apply","this","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","forwardRef","ref","_ref$color","color","_ref$size","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","displayName"],"sourceRoot":""}